FROM php:8.2-fpm
# FROM debian:latest

ENV DEBIAN_FRONTEND=noninteractive

# PHP
RUN apt update && \
apt upgrade -y && \
apt install -y \
    zip wget unzip curl git vim gnupg \
    libfreetype-dev \ 
    libjpeg62-turbo-dev \
    libzip-dev \
    libpq-dev \
    libicu-dev \
    lsb-release && \
docker-php-ext-install \
    pdo_mysql \
    bcmath \
    pgsql \
    pdo_pgsql \
    mysqli \
    -j$(nproc) \
    gd \
    intl && \ 
docker-php-ext-configure \
    gd --with-freetype --with-jpeg && \
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
curl -fsSL https://deb.nodesource.com/setup_lts.x > setup.x && \ 
chmod +x setup.x && \
./setup.x && \
apt update && apt install -y nodejs && \
npm install -g yarn maildev && \
wget https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb && \
dpkg -i mysql-apt-config_0.8.24-1_all.deb && \
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B7B3B788A8D3785C && \
apt update && apt install -y mysql-server
# Set environment variables for MySQL
ENV MYSQL_ROOT_PASSWORD=root
ENV MYSQL_DATABASE=portfolio_laravel
ENV MYSQL_USER=nourit
ENV MYSQL_PASSWORD=nourit

COPY . /var/www
WORKDIR /var/www

COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]

# start
RUN mv ".env.example" ".env" && \
echo "composer install --optimize-autoloader" > start.sh && \
chmod +x start.sh && \
echo "yarn" >> start.sh && ./start.sh && \
echo "/usr/local/bin/docker-entrypoint.sh &" >> start.sh && \
echo "mysqld &" >> start.sh && \
echo "php-fpm" >> start.sh

EXPOSE 3306
EXPOSE 80
EXPOSE 1080

# Use the entrypoint script to start MySQL
CMD ["sh", "-c", "./start.sh" ]